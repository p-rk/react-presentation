{"version":3,"sources":["logo.svg","Slides sync nonrecursive //.js$","images/virtual-dom.png","images/class-confuse.png","Slides sync /^/.//.*$","App.js","serviceWorker.js","index.js","Slides/0.js","Slides/1.js","Slides/2.js","Slides/3.js","Slides/4.js","Slides/5.js","Slides/6.js","Slides/7.js","Slides/8.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","slides","require","filename","replace","default","Component","index","component","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","slide","src","logo","className","alt","style","color","virtualDOMImg","padding","height","width","title","dimLines","2","3","4","5","6","7","8","highlightLines","stepIndex","fontSize","value","reactDOC"],"mappings":"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","file":"static/js/main.a17578b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","var map = {\n\t\"./0.js\": 65,\n\t\"./1.js\": 66,\n\t\"./2.js\": 67,\n\t\"./3.js\": 68,\n\t\"./4.js\": 69,\n\t\"./5.js\": 70,\n\t\"./6.js\": 71,\n\t\"./7.js\": 72,\n\t\"./8.js\": 73\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 219;","module.exports = __webpack_public_path__ + \"static/media/virtual-dom.8dbeeb58.png\";","module.exports = __webpack_public_path__ + \"static/media/class-confuse.9193e9c1.png\";","var map = {\n\t\"./0\": 65,\n\t\"./0.js\": 65,\n\t\"./1\": 66,\n\t\"./1.js\": 66,\n\t\"./2\": 67,\n\t\"./2.js\": 67,\n\t\"./3\": 68,\n\t\"./3.js\": 68,\n\t\"./4\": 69,\n\t\"./4.js\": 69,\n\t\"./5\": 70,\n\t\"./5.js\": 70,\n\t\"./6\": 71,\n\t\"./6.js\": 71,\n\t\"./7\": 72,\n\t\"./7.js\": 72,\n\t\"./8\": 73,\n\t\"./8.js\": 73\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 222;","import React from \"react\";\nimport { Presentation, PresenterModePlugin, Slide } from \"react-presents\";\nimport \"./App.css\";\n\n// Automatically load all slides in the Slides folder\nconst slides = require\n  .context(\"./Slides/\", false, /\\.js$/)\n  .keys()\n  .map((filename) => filename.replace(\"./\", \"\"))\n  .map((filename) => require(`./Slides/${filename}`).default);\n\nexport default () => (\n  <Presentation>\n    <PresenterModePlugin />\n\n    {slides.map((Component, index) => (\n      <Slide component={Component} key={index} />\n    ))}\n  </Presentation>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport { TitleSlide } from \"react-presents\";\n\nimport logo from \"../logo.svg\";\n\nconst slide = () => (\n  <TitleSlide>\n    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    <h1>\n      Introduction to <span style={{ color: \"#61dafb\" }}>React</span>\n    </h1>\n  </TitleSlide>\n);\n\nexport default slide;\n","import React from \"react\";\nimport { ContentSlide, Step } from \"react-presents\";\n\nconst virtualDOMImg = require(\"../images/virtual-dom.png\");\n\nconst slide = () => (\n  <div style={{ padding: \"8rem\" }}>\n    <ContentSlide>\n      <>\n        <h1>What is the Virtual DOM?</h1>\n        <Step index={1}>\n          <div>\n            The virtual DOM (VDOM) is a programming concept where an ideal, or\n            “virtual”, representation of a UI is kept in memory and synced with\n            the “real” DOM by a library such as ReactDOM. This process is called\n            <b> reconciliation</b>\n          </div>\n        </Step>\n      </>\n      <br />\n      <Step index={2}>\n        <img height=\"50%\" width=\"50%\" src={virtualDOMImg} alt=\"dom\" />\n      </Step>\n      <br />\n      <br />\n      <Step index={3}>\n        <h1>What makes Virtual DOM faster?</h1>\n        <p>\n          <b>Batch Update</b>\n        </p>\n        <p>\n          React follows a batch update mechanism to update the real DOM. Hence,\n          leading to increased performance. This means that updates to the real\n          DOM are sent in batches, instead of sending updates for every single\n          change in state. The repainting of the UI is the most expensive part,\n          and React efficiently ensures that the real DOM receives only batched\n          updates to repaint the UI.\n        </p>\n      </Step>\n    </ContentSlide>\n  </div>\n);\n\nexport default slide;\n","import React from \"react\";\nimport { ContentSlide, Step } from \"react-presents\";\n\n// Advantages of React\n// Here, are pros/benefits of using React:\n\nconst slide = () => (\n  <div style={{ padding: \"8rem\" }}>\n    <ContentSlide>\n      <h1>Advantages of React</h1>\n      <Step index={1}>\n        <ul>\n          <li>Easy to learn because of its simple Design</li>\n          <li>\n            The HTML-like syntax for which allows templating, and highly\n            detailed documentation.\n          </li>\n          <li>\n            Developers can spend more time writing modern JavaScript, and less\n            time worrying about the framework-specific code.\n          </li>\n          <li>\n            Enhance support for server-side rendering, making it a robust\n            framework for content-focused applications.\n          </li>\n          <li>Migrating between versions is in React.</li>\n          <li>Codemod feature to automate much of the process.</li>\n          <li>Skills learned in React can be applied to Native development.</li>\n          <li>\n            When you combine with ES6/7, ReactJS is perfect for managing heavy\n            loads with relative ease.\n          </li>\n        </ul>\n      </Step>\n      <br />\n      <Step index={2}>\n        <h1>Disadvantages</h1>\n        <ul>\n          <li>\n            Configure everything from the ground like http service, App level\n            state management\n          </li>\n          <li>\n            Integrating Reacts in the traditional MVC framework like Rail\n            requires complex configuration.\n          </li>\n          <li>\n            ReactJS would require the users to have in-depth knowledge with\n            respect to the integration of user interface into MVC framework.\n          </li>\n        </ul>\n      </Step>\n    </ContentSlide>\n  </div>\n);\n\nslide.title = \"A simple slide\";\n\nexport default slide;\n","import React from \"react\";\nimport { Code, ContentSlide, Step } from \"react-presents\";\n\nconst code = `import React from \"react\";\n\nclass Counter extends React.Component {\n  state = {\n    count: 0,\n  };\n  increment = () => {\n    this.setState({\n      count: this.state.count + 1,\n    });\n  };\n  decrement = () => {\n    this.setState({\n      count: this.state.count - 1,\n    });\n  };\n  render() {\n    return (\n      <div>\n        <p>{this.state.count}</p>\n        <button onClick={this.increment}>Increment</button>\n        <button onClick={this.decrement}>Decrement</button>\n      </div>\n    );\n  }\n}\n\nexport default Counter;`;\n\nconst dimLines = {\n  2: [[1, 30]],\n  3: [[3, 30]],\n  4: [\n    [0, 2],\n    [6, 30],\n  ],\n  5: [\n    [0, 15],\n    [25, 30],\n  ],\n  6: [\n    [0, 5],\n    [11, 19],\n    [21, 30],\n  ],\n  7: [\n    [0, 10],\n    [16, 20],\n    [22, 30],\n  ],\n  8: [[0, 26]],\n};\nconst highlightLines = {\n  2: [[0, 1]],\n  3: [[1, 2]],\n  4: [[3, 5]],\n  5: [\n    [18, 18],\n    [22, 22],\n  ],\n};\n\nconst slide = ({ stepIndex }) => (\n  <div style={{ padding: \"6rem\" }}>\n    <ContentSlide>\n      <h1>Simple React Component</h1>\n      <Step index={1}>\n        <Code\n          style={{ fontSize: \"20px\" }}\n          dimLines={dimLines[stepIndex]}\n          highlightLines={highlightLines[stepIndex]}\n          value={code}\n        />\n      </Step>\n      <ul>\n        <Step index={2}>\n          <li>Import React</li>\n        </Step>\n        <Step index={3}>\n          <li>Write class Component</li>\n        </Step>\n        <Step index={4}>\n          <li>Local State of Component</li>\n        </Step>\n        <Step index={5}>\n          <li>Render Method (Wrap everytime)</li>\n        </Step>\n        <Step index={6}>\n          <li>Define Increment function</li>\n        </Step>\n        <Step index={7}>\n          <li>Define Decrement function</li>\n        </Step>\n        <Step index={8}>\n          <li>Export the Component</li>\n        </Step>\n        <Step index={9}>\n          <li>That's it</li>\n        </Step>\n      </ul>\n    </ContentSlide>\n  </div>\n);\n\nexport default slide;\n","import React from \"react\";\nimport { ContentSlide, Step } from \"react-presents\";\n\nconst slide = () => (\n  <div style={{ padding: \"8rem\" }}>\n    <ContentSlide>\n      <h1>LifeCycles for Class Components</h1>\n      <p>\n        These methods are called in the following order when an instance of a\n        component is being created and inserted into the DOM:\n      </p>\n      <ul>\n        <Step index={1}>\n          <li>constructor()</li>\n        </Step>\n        <Step index={2}>\n          <li>static getDerivedStateFromProps()</li>\n        </Step>\n        <Step index={3}>\n          <li>render()</li>\n        </Step>\n        <Step index={4}>\n          <li>componentDidMount()</li>\n        </Step>\n      </ul>\n    </ContentSlide>\n  </div>\n);\n\nslide.title = \"A simple slide\";\n\nexport default slide;\n","import React from \"react\";\nimport { Code, ContentSlide, Step } from \"react-presents\";\n\nconst code = `import React from \"react\";\n\nconst Counter = () => {\n  const [count, setCount] = React.useState(0)\n  const increment = () => setCount(count + 1)\n  const decrement = () => setCount(count - 1)\n  return (\n    <div>\n      <p>{count}</p>\n      <button onClick={increment}>Increment</button>\n      <button onClick={decrement}>Decrement</button>\n    </div>\n  )\n}\n\nexport default Counter;`;\n\nconst dimLines = {\n  2: [[1, 30]],\n  3: [[3, 30]],\n  4: [\n    [0, 2],\n    [4, 30],\n  ],\n  5: [\n    [0, 5],\n    [13, 15],\n  ],\n  6: [\n    [0, 3],\n    [5, 6],\n    [7, 8],\n    [10, 20],\n  ],\n  7: [\n    [0, 4],\n    [6, 7],\n    [8, 9],\n    [11, 15],\n  ],\n};\nconst highlightLines = {};\n\nconst slide = ({ stepIndex }) => (\n  <div style={{ padding: \"6rem\" }}>\n    <ContentSlide>\n      <h1>How about hooks ?</h1>\n      <Step index={1}>\n        <Code\n          style={{ fontSize: \"20px\" }}\n          dimLines={dimLines[stepIndex]}\n          highlightLines={highlightLines[stepIndex]}\n          value={code}\n        />\n      </Step>\n      <ul>\n        <Step index={2}>\n          <li>Import React</li>\n        </Step>\n        <Step index={3}>\n          <li>Define Simple Function</li>\n        </Step>\n        <Step index={4}>\n          <li>Local State of Component</li>\n        </Step>\n        <Step index={5}>\n          <li>Return JSX (Wrap everytime)</li>\n        </Step>\n        <Step index={6}>\n          <li>Define Increment function</li>\n        </Step>\n        <Step index={7}>\n          <li>Define Decrement function</li>\n        </Step>\n        <Step index={8}>\n          <li>Export the Component</li>\n        </Step>\n        <Step index={9}>\n          <li>That's it</li>\n        </Step>\n      </ul>\n    </ContentSlide>\n  </div>\n);\n\nexport default slide;\n","import React from \"react\";\nimport { ContentSlide, Step, Code } from \"react-presents\";\n\nconst useEffect = `useEffect(() => {\n  effect\n  return () => {\n    cleanup\n  }\n}, [dependency])`;\n\nconst slide = () => (\n  <div style={{ padding: \"8rem\" }}>\n    <ContentSlide>\n      <h1>Lifecycles in Hooks</h1>\n      <ul>\n        <Step index={1}>\n          <li>useEffect() ~ when component mounts</li>\n        </Step>\n        <Step index={2}>\n          <li>useEffect() ~ when component updates</li>\n        </Step>\n        <Step index={3}>\n          <li>useEffect() ~ when component unmounts</li>\n        </Step>\n      </ul>\n      <Step index={4}>\n        <p>Yes! thats right for every life cycle useEffect works :)</p>\n      </Step>\n      <Step index={5}>\n        <Code value={useEffect} />\n      </Step>\n    </ContentSlide>\n  </div>\n);\n\nexport default slide;\n","import React from \"react\";\nimport { ContentSlide } from \"react-presents\";\n\nconst reactDOC = require(\"../images/class-confuse.png\");\n\nconst slide = () => (\n  <div style={{ padding: \"8rem\" }}>\n    <ContentSlide>\n      <h1>Why Hooks other than Classes?</h1>\n      <img src={reactDOC} alt=\"\" height=\"50%\" width=\"70%\" />\n    </ContentSlide>\n  </div>\n);\n\nexport default slide;\n","import React from \"react\";\nimport { TitleSlide } from \"react-presents\";\n\nconst slide = () => (\n  <TitleSlide>\n    <h1>Thank you!</h1>\n  </TitleSlide>\n);\n\nexport default slide;\n"],"sourceRoot":""}